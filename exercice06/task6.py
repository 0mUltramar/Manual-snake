# Заполнить список из шести элементов квадратными корнями произвольных целочисленныз значений.
# Вывести список на экран через запятую.

''' Щас буит мясо '''

import random as rnd

limitList = 7
# Список значений, которые были найдены, согласно условию:
# квадратный корень из этих чисел должены так же быть целым числом
foundCriteriaList = []

# Лист с квадратными корнямя из найденных элементов
sqrtList = []

# Список, сколько потребовалось итераций для кождого числа
iterList = []

for i in range(limitList):  # Задаем ограничение на 6 значений
    x = 0  # объвляем х, который будем искать в диапазоне
    iterCount = 0  # объявляем кантутер, чтобы понять, сколько раз цикл крутился, чтобы получить значение уд. условию.
    while True:  # запускаем цикл, который будет нам искать значения, удовл. условию
        iterCount += 1  # инициализируем счетчик
        x = rnd.randint(1, 1000)  # диапазон, среди которого будем разыскивать число, чей кв. корень - целое число
        if x ** 0.5 == round(x ** 0.5):  # Условие: квадратный корень является целым
            a = int(x ** 0.5)  # значение для списка с корнями найденных чисел
            break  # если условие выполнилось, переходим к новой итерации
    # Формируем списки
    foundCriteriaList.append(x)
    iterList.append(iterCount)
    sqrtList.append(a)

# считаем, сколько всего итераций потребовалось, чтобы найти удовл. условию значения
totalIter = sum(iterList)

# Сделал много принтов, потому что через форматирование в 1 принте получалось не очень красиво
print("Потребовалось итераций для нахождения каждого числа {}".format(iterList))
print("Из множества найденые числа:                        {}".format(foundCriteriaList))
print("Корни из этих чисел:                                {}".format(sqrtList))
print("Потребовалось итераций:                             {}".format(totalIter))
